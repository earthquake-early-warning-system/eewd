#if defined(DISPLAY_FLAVOUR_LCD)

#include <Adafruit_GFX.h>    // Core graphics library
#include "Adafruit_ST77xx.h"
#include "Adafruit_ST7735.h"
#include <SPI.h>

  #define TFT_CS         -1 // not tested
  #define TFT_RST        D5  

  #define TFT_DC         D2 //D4
  #define TFT_MOSI       D3 //D6
  #define TFT_SCLK       D4 //D7
  #define TFT_BLK        D1 //D2 ?

#define POSITION_TRAINGLE_X0 (117)
#define POSITION_TRAINGLE_Y0 (13)

#define POSITION_TRAINGLE_X1 (82)
#define POSITION_TRAINGLE_Y1 (70)

#define POSITION_TRAINGLE_X2 (150)
#define POSITION_TRAINGLE_Y2 (70)
 

// For 1.44" and 1.8" TFT with ST7735 use:
Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_MOSI, TFT_SCLK, TFT_RST); //


enum DISPLAY_WARNING_LEVELS
{
  DISPLAY_WARNING_LEVELS__NONE,
  DISPLAY_WARNING_LEVELS__TOGGEL,
  DISPLAY_WARNING_LEVELS__OK,
  DISPLAY_WARNING_LEVELS__EXP,
  DISPLAY_WARNING_LEVELS__INFO,
  DISPLAY_WARNING_LEVELS__NOTICE,
  DISPLAY_WARNING_LEVELS__CAUTION,
  DISPLAY_WARNING_LEVELS__WARNING,
  DISPLAY_WARNING_LEVELS__DANGER,
  DISPLAY_WARNING_LEVELS__MAX,
  DISPLAY_WARNING_LEVELS__INVALID = DISPLAY_WARNING_LEVELS__MAX
};

#define imageWidth 50
#define imageHeight 50

const uint16_t bitmap [] PROGMEM={ 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xe73d, 0xdedb, 0xce59, 0xbdf7, 0xbdd7, 0xc639, 0xdebb, 0xe71c, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0xc5f8, 0x8412, 0x4a2c, 0x18c9, 0x827, 0x7, 0x7, 0x27, 0x18a8, 0x39eb, 0x7391, 0xb597, 0xdefc, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xb597, 0x6b2e, 0x2108, 0x848, 0x108c, 0x108f, 0x1091, 0x1892, 0x1892, 0x1891, 0x108f, 0x108d, 0x1069, 0x1087, 0x526c, 0x94b4, 0xdf1c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x7390, 0x2109, 0x106a, 0x188f, 0x20b3, 0x20d4, 0x20d5, 0x20f5, 0x2914, 0x2913, 0x2914, 0x28f4, 0x20d4, 0x20b3, 0x1890, 0x106c, 0x1089, 0x4a2c, 0xb597, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6bb, 0x3189, 0x1067, 0x18ae, 0x20b4, 0x1897, 0x1876, 0x20b6, 0x18b3, 0x84e, 0x2a, 0x29, 0x2b, 0x104f, 0x20b4, 0x20b6, 0x1876, 0x20b5, 0x20d1, 0x84a, 0x18a6, 0x8412, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xa535, 0x10a6, 0x84b, 0x20d4, 0x1896, 0x1877, 0x1877, 0x20d3, 0x106c, 0x10a7, 0x31a9, 0x632f, 0x5b51, 0x3a2d, 0x2969, 0x867, 0x18ad, 0x20b5, 0x1877, 0x1896, 0x20d5, 0x1891, 0x846, 0x4a2b, 0xce7a, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x94b3, 0x20e8, 0x104c, 0x20d4, 0x1897, 0x1877, 0x1877, 0x20b5, 0x106b, 0x31aa, 0xa515, 0xef7d, 0xf7ff, 0x9579, 0x7475, 0xcebc, 0x8432, 0x2108, 0x106e, 0x20b5, 0x1877, 0x1857, 0x20b6, 0x20d1, 0x829, 0x39ca, 0xb5b7, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x3187, 0x106b, 0x20d4, 0x1877, 0x1858, 0x1877, 0x20b6, 0x106f, 0x2128, 0xbdf9, 0xefbf, 0xf7bf, 0xefdf, 0x53d5, 0x3b11, 0xbe9c, 0xefdf, 0x9cf6, 0x27, 0x1890, 0x1897, 0x1858, 0x1857, 0x1896, 0x20d2, 0x868, 0x39c9, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0x4a6b, 0x106a, 0x20d4, 0x1877, 0x1058, 0x1877, 0x20d3, 0x28, 0x8433, 0xd73e, 0x8518, 0xb63b, 0xdfbf, 0x3313, 0x2ad2, 0x8d79, 0xe7bf, 0xefbf, 0x426d, 0x84b, 0x1896, 0x1858, 0x1858, 0x1858, 0x20d3, 0x1089, 0x4a2b, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa515, 0x18c8, 0x20d0, 0x1896, 0x1058, 0x1897, 0x1090, 0x6, 0xb61c, 0x8518, 0x2290, 0x6c97, 0xbedf, 0x2af2, 0x4c17, 0x5c77, 0xae7e, 0x9d99, 0x63b2, 0x4b, 0x1074, 0x1877, 0x1858, 0x1896, 0x18af, 0x18c7, 0xad76, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x630e, 0x828, 0x20b5, 0x1858, 0x1897, 0x870, 0x192d, 0x4312, 0x4b72, 0x6cb7, 0x4bb4, 0x6cd9, 0x4372, 0x961c, 0x3b95, 0x3333, 0x3b32, 0x4b51, 0x192e, 0x1074, 0x1877, 0x1877, 0x20d3, 0x849, 0x7390, 0xf77e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x2948, 0x106f, 0x2096, 0x1897, 0x1091, 0x8, 0x957a, 0xcf1e, 0xc71e, 0x53f5, 0x2af2, 0x6c75, 0xbf1e, 0x53f5, 0x2ab0, 0xae9d, 0x7cb6, 0x29, 0x1895, 0x1877, 0x20b6, 0x108c, 0x39cb, 0xce7a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8432, 0x27, 0x20b2, 0x1896, 0x20d4, 0x29, 0x73d2, 0xf7df, 0xefbf, 0x7cf8, 0x1a70, 0x9599, 0xdfbf, 0x8d58, 0x7c95, 0xd73e, 0x31eb, 0x84b, 0x1896, 0x1896, 0x18b2, 0x1086, 0x9cd4, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x2968, 0x106c, 0x20b5, 0x20b5, 0x106f, 0x2107, 0xb597, 0xf7ff, 0xae1b, 0x2a8f, 0xbe9c, 0xefdf, 0xdf5e, 0xdf3e, 0x8c74, 0x27, 0x1891, 0x1896, 0x20d4, 0x84a, 0x52ad, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9d14, 0x7, 0x1891, 0x1896, 0x20b5, 0x106b, 0x2128, 0x9495, 0xd6fe, 0xa5b9, 0xef9f, 0xffff, 0xdefd, 0x7390, 0x10a7, 0x108f, 0x20b5, 0x20b5, 0x106d, 0x845, 0xd69b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x5aee, 0x106a, 0x20d3, 0x1876, 0x20b5, 0x106e, 0x27, 0x10c7, 0x4a8c, 0x5aed, 0x39ea, 0x1086, 0x28, 0x1890, 0x20b6, 0x1896, 0x18b1, 0x868, 0x8c73, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xf75f, 0xdede, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdd8, 0x2109, 0x108f, 0x1896, 0x1877, 0x20b6, 0x20b2, 0x106d, 0x84a, 0x84a, 0x84b, 0x106e, 0x20b3, 0x18b6, 0x1877, 0x20b4, 0x106b, 0x4a4c, 0xe73d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbf, 0xf77f, 0xdebf, 0xbdbe, 0x8c5b, 0x5ab7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7e, 0x6b71, 0x84a, 0x20d3, 0x1877, 0x1877, 0x1877, 0x1897, 0x2096, 0x1896, 0x1896, 0x1897, 0x1877, 0x1877, 0x1896, 0x188f, 0x2108, 0xad77, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffbf, 0xf79f, 0xd67f, 0x949b, 0x6b1a, 0x4a3a, 0x62fa, 0x8c3b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdeff, 0x6b36, 0x84a, 0x106e, 0x20b6, 0x1858, 0x1858, 0x1858, 0x1858, 0x1858, 0x1858, 0x1058, 0x1858, 0x1877, 0x20d3, 0x869, 0x7390, 0xef7e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xe6ff, 0xb57e, 0x7b9b, 0x5298, 0x5296, 0x841b, 0xb57d, 0xd69f, 0xef5f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71f, 0x7399, 0x108d, 0x9, 0x1894, 0x1877, 0x1858, 0x1858, 0x1858, 0x1858, 0x1858, 0x1858, 0x1858, 0x20b6, 0x106c, 0x31aa, 0xce7a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xbdde, 0x5a98, 0x3999, 0x525b, 0x949d, 0xd67e, 0xef5f, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xce3e, 0x5296, 0x84d, 0x2e, 0x20b5, 0x1877, 0x1858, 0x1858, 0x1858, 0x1858, 0x1857, 0x1896, 0x18b2, 0x10a7, 0xa535, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbf, 0xa51e, 0x2956, 0x6b3b, 0xdebf, 0xf79f, 0xffbf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xc63d, 0xb59e, 0xe71f, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79f, 0x949b, 0x20f3, 0xa, 0x1091, 0x1897, 0x1858, 0x1858, 0x1858, 0x1858, 0x1877, 0x20b4, 0x2b, 0x5250, 0xef5f, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xd6bf, 0x527a, 0x421b, 0xc5ff, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5f, 0x841b, 0x3999, 0x83fc, 0xc61f, 0xf77f, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdebf, 0x62f7, 0x86b, 0x82c, 0x1895, 0x1877, 0x1858, 0x1858, 0x1878, 0x1896, 0x106e, 0x828, 0x62f6, 0xad3b, 0xd69e, 0xf77f, 0xffbf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffdf, 0xef7f, 0x8c5d, 0x291a, 0x947e, 0xf77f, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xbddf, 0x41fb, 0x2939, 0x41fb, 0x6b5b, 0xad5e, 0xe6ff, 0xf79f, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xbddd, 0x2931, 0xc, 0x106f, 0x20b5, 0x1858, 0x1858, 0x1896, 0x1892, 0x8, 0x7372, 0x7bd9, 0x5276, 0x5ab7, 0x739a, 0xa4ff, 0xdedf, 0xf77f, 0xffbf, 0xffdf, 0xffdf, 0xf7bf, 0xbddf, 0x41db, 0x5a9a, 0xdebf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5f, 0x947d, 0x291a, 0x315e, 0x527d, 0x3997, 0x5297, 0x949b, 0xdedf, 0xf79f, 0xf7bf, 0xffbf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf77f, 0x6b5b, 0x108f, 0xa, 0x1893, 0x1877, 0x1877, 0x20b4, 0x106b, 0x4a2d, 0xdedc, 0xe6ff, 0xce3e, 0x9cbe, 0x5abb, 0x39b7, 0x4a56, 0x83f9, 0xc61e, 0xef5f, 0xf79f, 0xf7bf, 0xdedf, 0x6b5b, 0x2957, 0xad1e, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe6ff, 0x631c, 0x20da, 0xad1e, 0xce5f, 0x8c3b, 0x5256, 0x39b7, 0x631c, 0xad5e, 0xdebe, 0xf77f, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xd67e, 0x4a33, 0x84b, 0x84f, 0x20b5, 0x20b5, 0x188e, 0x2108, 0xbdf8, 0xffdf, 0xffdf, 0xffbf, 0xf7bf, 0xf79f, 0xe71f, 0xa4fc, 0x5af7, 0x39d6, 0x41f9, 0x7b9d, 0xbdbe, 0xd67f, 0xad1e, 0x399a, 0x527d, 0xef7f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xc5ff, 0x4219, 0x4a39, 0xce1f, 0xef5f, 0xdebf, 0xa51e, 0x6b39, 0x5277, 0x62d8, 0x947b, 0xbdbe, 0xe6ff, 0xf79f, 0xffdf, 0xffff, 0xffdf, 0xef7f, 0x9cfb, 0x2110, 0xb, 0x20d0, 0x20f1, 0x1069, 0x7bf1, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79f, 0xef3f, 0xc61f, 0x8c5d, 0x6b19, 0x5256, 0x62f8, 0x7b9c, 0x399c, 0x20da, 0xc61f, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79f, 0x9cdd, 0x2918, 0x737d, 0xe6ff, 0xf79f, 0xf7bf, 0xef5f, 0xc5fd, 0x8c5a, 0x5aba, 0x4a1a, 0x737a, 0xa4fb, 0xd69e, 0xf79f, 0xf7bf, 0xf7bf, 0xd69f, 0x62f8, 0x86c, 0x849, 0x1089, 0x41eb, 0xd6bb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffbf, 0xef5f, 0xbddd, 0x945a, 0x62fb, 0x399c, 0x20d9, 0x8c3b, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe71f, 0x5abc, 0x39b8, 0xa51d, 0xf77f, 0xffff, 0xffdf, 0xf7bf, 0xef5f, 0xd69f, 0xb57d, 0x7bda, 0x5276, 0x5a97, 0x7bbb, 0xb59f, 0xef3f, 0xef3f, 0xad5c, 0x39b1, 0x8, 0x10a6, 0xa515, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7bf, 0xef7f, 0xdebf, 0xbddf, 0x9cdd, 0xce3d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xf77f, 0xbdbf, 0x41da, 0x5a9a, 0xd67f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffbf, 0xef1f, 0xce3e, 0x947d, 0x525a, 0x39d7, 0x62f7, 0xad3d, 0xd69f, 0x7bdb, 0x870, 0x4a50, 0xef7e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xf7bf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xf79f, 0xdedf, 0xbdbe, 0x6b3d, 0x399a, 0x4a38, 0xbddd, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffbf, 0xf7bf, 0xf77f, 0xce5f, 0x7399, 0x41f6, 0x41da, 0x527e, 0x291a, 0x41d9, 0xc61f, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedf, 0xc5fe, 0x9cbc, 0x6b18, 0x4a56, 0x6319, 0x949d, 0xce7f, 0xf79f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbf, 0xef5f, 0xce5f, 0x947d, 0x5adb, 0x41da, 0x2938, 0x83da, 0xf79f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x6b5a, 0x4a5a, 0x5a9a, 0x83fa, 0xb57c, 0xef3f, 0xf7bf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xf7bf, 0xe71f, 0xbdbd, 0x8bfb, 0xa4fb, 0xf79f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x83fa, 0xad3d, 0xce5f, 0xef3f, 0xf79f, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7bf, 0xef5f, 0xf77f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5f, 0xffbf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff};



void display_setup()
{
    pinMode(TFT_BLK, OUTPUT);
    digitalWrite(TFT_BLK, HIGH);


    tft.initR(INITR_MINI160x80);  // Init ST7735S mini display
    tft.setRotation(1); 
    tft.invertDisplay(true);

    tft.fillScreen(ST77XX_RED);

    tft.fillScreen(ST77XX_WHITE);
     
    tft.drawRGBBitmap(10,10, bitmap, imageWidth,imageHeight);
}

void displayPartClear()
{
  //tft.drawRect(75, 5, 80, 70, ST77XX_BLACK);
  tft.fillRect(70, 0, 161, 81, ST77XX_BLACK);
  
}

void display_danger()
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, POSITION_TRAINGLE_X2, POSITION_TRAINGLE_Y2, ST77XX_RED);

  tft.drawTriangle(
    POSITION_TRAINGLE_X0, 5
    , POSITION_TRAINGLE_X1-5 , POSITION_TRAINGLE_Y1+3
    , POSITION_TRAINGLE_X2+5 , POSITION_TRAINGLE_Y2+3
    , ST77XX_RED); 

  tft.setCursor(80, 45);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.println("DANGER");
  // Text Danger
}



void display_warning()
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_ORANGE);

  tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_RED); 
  // Text WARNING
  tft.setCursor(75, 45);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.println("WARNING");
}

void display_caution()
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_YELLOW);

  tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_RED); 
  // Text CAUTION
  tft.setCursor(75, 45);
  tft.setTextColor(ST77XX_RED);
  tft.setTextSize(2);
  tft.println("CAUTION");
}

void display_blink()
{
  digitalWrite(TFT_BLK, LOW);
  // displayPartClear();
  // tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_BLACK);

  // tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_BLACK); 
  // digitalWrite(TFT_BLK, HIGH);
  // Text CAUTION
  //tft.setCursor(75, 15);
  //tft.setTextColor(ST77XX_BLACK);
  //tft.setTextSize(2);
  //tft.println("CAUTION");
}


void display_notice()
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_BLUE);

  tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_WHITE); 
  // Text NOTICE
  tft.setCursor(80, 45);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.println("NOTICE");
}


void display_info()  
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_WHITE);

  tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_WHITE); 
  // Text CHECK
  tft.setCursor(93, 45);
  tft.setTextColor(ST77XX_BLUE);
  tft.setTextSize(2);
  tft.println("info");
}


void display_check() // NONE
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_BLACK);

  tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_WHITE); 
  // Text CHECK
  tft.setCursor(102, 45);
  tft.setTextColor(ST77XX_BLUE);
  tft.setTextSize(2);
  tft.println("exp"); 
}

void display_OK() // OK
{

  displayPartClear();
  tft.fillTriangle(POSITION_TRAINGLE_X0, POSITION_TRAINGLE_Y0, POSITION_TRAINGLE_X1, POSITION_TRAINGLE_Y1, 110+40, POSITION_TRAINGLE_Y2, ST77XX_BLACK);

  tft.drawTriangle(POSITION_TRAINGLE_X0, 5, POSITION_TRAINGLE_X1-5, POSITION_TRAINGLE_Y1+3, POSITION_TRAINGLE_X2+5, POSITION_TRAINGLE_Y2+3, ST77XX_WHITE); 
  // Text CHECK
  tft.setCursor(105, 45);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.println("OK");
}

/*
DANGER RED background
WARNING ORANGE background
CAUTION YELLOW background
ALERT BLUE
NOTICE WHITE background

displayPartClear();
display_OK();
display_check();
display_info();
display_notice();
display_caution();
display_warning();
display_danger();
*/

void display_loop(enum DISPLAY_WARNING_LEVELS level) {

  switch (level)
  {
    case DISPLAY_WARNING_LEVELS__NONE :
    {
      displayPartClear();
    }break;
    
    case DISPLAY_WARNING_LEVELS__TOGGEL :
    {
      displayPartClear();
    }break;

    case DISPLAY_WARNING_LEVELS__OK :
    {
      display_OK();
    }break;
    case DISPLAY_WARNING_LEVELS__EXP :
    {
      display_check();
    }break;
    case DISPLAY_WARNING_LEVELS__INFO :
    {
      display_info();
    }break;
    case DISPLAY_WARNING_LEVELS__NOTICE:
    {
      display_notice();
    }break;
    case DISPLAY_WARNING_LEVELS__CAUTION:
    {
      display_caution();
    }break;
    case DISPLAY_WARNING_LEVELS__WARNING:
    {
      display_warning();
    }break;
    case DISPLAY_WARNING_LEVELS__DANGER:
    {
      display_danger();
    }break;
    case DISPLAY_WARNING_LEVELS__MAX:
    {

    }break;
    default: {}
  }
   
}


#endif //#if defined(DISPLAY_FLAVOUR_LCD)